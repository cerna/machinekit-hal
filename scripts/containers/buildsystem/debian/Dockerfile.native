# This is temporary Dockerfile, its function will be integrated to Dockerfile

FROM debian:buster

###################################################################
# Generic apt configuration

ENV TERM=dumb

# apt config:  silence warnings and set defaults
ENV DEBIAN_FRONTEND=noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN=true
ENV LC_ALL=C.UTF-8
ENV LANGUAGE=C.UTF-8
ENV LANG=C.UTF-8

# turn off recommends on container OS and proot OS
RUN echo 'APT::Install-Recommends "0";\nAPT::Install-Suggests "0";' > \
	    /etc/apt/apt.conf.d/01norecommend

# use stable Debian mirror
ARG DEBIAN_MIRROR=ftp.debian.org
ARG DEBIAN_SECURITY_MIRROR=security.debian.org
RUN sed -i /etc/apt/sources.list \
        -e "s/deb.debian.org/${DEBIAN_MIRROR}/" \
        -e "s/security.debian.org/${DEBIAN_SECURITY_MIRROR}/"

RUN echo exit 0 > /usr/sbin/policy-rc.d

# update Debian OS
RUN apt-get update \
    && apt-get -y upgrade \
    && apt-get clean

RUN apt-get install -y \
	curl \
    sudo \
    && apt-get clean

RUN apt-get install -y \
    git \
    lsb-release \
	build-essential \
	devscripts \
	fakeroot \
	equivs \
	libtool \
	autoconf \
	automake \
	quilt \
	psmisc \
	pkg-config \
    && apt-get clean

RUN apt-get -y install \
	libfile-fcntllock-perl \
	locales \
	git \
	bzip2 \
	sharutils \
	net-tools \
	time \
	procps \
	help2man \
	xvfb \
	xauth \
	python-sphinx \
	wget \
	sudo \
	lftp \
	apt-transport-https \
	ca-certificates \
	multistrap \
	debian-keyring \
	debian-archive-keyring \
	python-apt \
	rubygems \
    curl \
    dpkg-sig \
    && apt-get clean

RUN apt-get install -y debian-keyring  \
&& apt-get install -y debian-archive-keyring \
&& apt-get install -y apt-transport-https
RUN curl -1sLf --insecure 'https://dl.cloudsmith.io/public/machinekit/machinekit/cfg/gpg/gpg.A9B6D8B4BD8321F3.key' | apt-key add -
RUN curl -1sLf --insecure 'https://dl.cloudsmith.io/public/machinekit/machinekit/cfg/setup/config.deb.txt?distro=debian&codename=buster' > /etc/apt/sources.list.d/machinekit-machinekit.list
RUN apt-get update

RUN apt-get update
RUN apt-get install -y \
    libck-dev \
    && apt-get clean

RUN echo "ALL ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers

RUN addgroup --gid 1000 machinekit && \
    adduser --uid 1000 --ingroup machinekit \
        --home /home/machinekit --shell /bin/bash \
        --disabled-password --gecos "" machinekit

USER machinekit