kind: pipeline
name: Build Debian BUSTER Machinekit-HAL and test AMD64

platform:
  arch: amd64

steps:
- name: Build and run tests
  image: eryaf/mk-native_buster
  commands:
  - uname -a
  - sudo apt-get update
  - sudo apt-get -y upgrade
  - cd ~
  - git clone --depth 1 --branch drone-cloud-ci https://github.com/cerna/machinekit-hal mk
  - cd mk
  - debian/configure
  - mk-build-deps -ir -s sudo -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
  - |
      bash -xec "
      # Set up build:  \`autoconf\` and \`make\`
      (
      cd src;
      ./autogen.sh;
      ./configure
      )
      # Build
      make -C src -j${JOBS};
      # Set up runtime:  setuid, environment, ini
      sudo make -C src setuid || true;  # Don't exit if this fails
      . scripts/rip-environment;
      echo -e 'ANNOUNCE_IPV4=0\nANNOUNCE_IPV6=0' >> \
      etc/machinekit/machinekit.ini;
      tail -2 etc/machinekit/machinekit.ini;
            # Run regression tests
      runtests tests"
      
---
kind: pipeline
name: Build Debian BUSTER Machinekit-HAL and test ARM64

platform:
  arch: arm64

steps:
- name: Build and run tests
  image: eryaf/mk-native_buster
  commands:
  - uname -a
  - sudo apt-get update
  - sudo apt-get -y upgrade
  - cd ~
  - git clone --depth 1 --branch drone-cloud-ci https://github.com/cerna/machinekit-hal mk
  - cd mk
  - debian/configure
  - mk-build-deps -ir -s sudo -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
  - |
      bash -xec "
      # Set up build:  \`autoconf\` and \`make\`
      (
      cd src;
      ./autogen.sh;
      ./configure
      )
      # Build
      make -C src -j${JOBS};
      # Set up runtime:  setuid, environment, ini
      sudo make -C src setuid || true;  # Don't exit if this fails
      . scripts/rip-environment;
      echo -e 'ANNOUNCE_IPV4=0\nANNOUNCE_IPV6=0' >> \
      etc/machinekit/machinekit.ini;
      tail -2 etc/machinekit/machinekit.ini;
            # Run regression tests
      runtests tests"

---
kind: pipeline
name: Build Debian BUSTER Machinekit-HAL and test ARM

platform:
  arch: arm

steps:
- name: Build and run tests
  image: eryaf/mk-native_buster
  commands:
  - uname -a
  - sudo apt-get update
  - sudo apt-get -y upgrade
  - cd ~
  - git clone --depth 1 --branch drone-cloud-ci https://github.com/cerna/machinekit-hal mk
  - cd mk
  - debian/configure
  - mk-build-deps -ir -s sudo -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
  - |
      bash -xec "
      # Set up build:  \`autoconf\` and \`make\`
      (
      cd src;
      ./autogen.sh;
      ./configure
      )
      # Build
      make -C src -j${JOBS};
      # Set up runtime:  setuid, environment, ini
      sudo make -C src setuid || true;  # Don't exit if this fails
      . scripts/rip-environment;
      echo -e 'ANNOUNCE_IPV4=0\nANNOUNCE_IPV6=0' >> \
      etc/machinekit/machinekit.ini;
      tail -2 etc/machinekit/machinekit.ini;
            # Run regression tests
      runtests tests"

---
kind: pipeline
name: Build Debian STRETCH Machinekit-HAL and test AMD64

platform:
  arch: amd64

steps:
- name: Build and run tests
  image: eryaf/mk-native_stretch
  commands:
  - uname -a
  - sudo apt-get update
  - sudo apt-get -y upgrade
  - cd ~
  - git clone --depth 1 --branch drone-cloud-ci https://github.com/cerna/machinekit-hal mk
  - cd mk
  - debian/configure
  - mk-build-deps -ir -s sudo -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
  - |
      bash -xec "
      # Set up build:  \`autoconf\` and \`make\`
      (
      cd src;
      ./autogen.sh;
      ./configure
      )
      # Build
      make -C src -j${JOBS};
      # Set up runtime:  setuid, environment, ini
      sudo make -C src setuid || true;  # Don't exit if this fails
      . scripts/rip-environment;
      echo -e 'ANNOUNCE_IPV4=0\nANNOUNCE_IPV6=0' >> \
      etc/machinekit/machinekit.ini;
      tail -2 etc/machinekit/machinekit.ini;
            # Run regression tests
      runtests tests"

---
kind: pipeline
name: Build Debian STRETCH Machinekit-HAL and test ARM64

platform:
  arch: arm64

steps:
- name: Build and run tests
  image: eryaf/mk-native_stretch
  commands:
  - uname -a
  - sudo apt-get update
  - sudo apt-get -y upgrade
  - cd ~
  - git clone --depth 1 --branch drone-cloud-ci https://github.com/cerna/machinekit-hal mk
  - cd mk
  - debian/configure
  - mk-build-deps -ir -s sudo -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
  - |
      bash -xec "
      # Set up build:  \`autoconf\` and \`make\`
      (
      cd src;
      ./autogen.sh;
      ./configure
      )
      # Build
      make -C src -j${JOBS};
      # Set up runtime:  setuid, environment, ini
      sudo make -C src setuid || true;  # Don't exit if this fails
      . scripts/rip-environment;
      echo -e 'ANNOUNCE_IPV4=0\nANNOUNCE_IPV6=0' >> \
      etc/machinekit/machinekit.ini;
      tail -2 etc/machinekit/machinekit.ini;
            # Run regression tests
      runtests tests"

---
kind: pipeline
name: Build Debian STRETCH Machinekit-HAL and test ARM

platform:
  arch: arm

steps:
- name: Build and run tests
  image: eryaf/mk-native_stretch
  commands:
  - uname -a
  - sudo apt-get update
  - sudo apt-get -y upgrade
  - cd ~
  - git clone --depth 1 --branch drone-cloud-ci https://github.com/cerna/machinekit-hal mk
  - cd mk
  - debian/configure
  - mk-build-deps -ir -s sudo -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
  - |
      bash -xec "
      # Set up build:  \`autoconf\` and \`make\`
      (
      cd src;
      ./autogen.sh;
      ./configure
      )
      # Build
      make -C src -j${JOBS};
      # Set up runtime:  setuid, environment, ini
      sudo make -C src setuid || true;  # Don't exit if this fails
      . scripts/rip-environment;
      echo -e 'ANNOUNCE_IPV4=0\nANNOUNCE_IPV6=0' >> \
      etc/machinekit/machinekit.ini;
      tail -2 etc/machinekit/machinekit.ini;
            # Run regression tests
      runtests tests"

---
kind: pipeline
name: Build Debian JESSIE Machinekit-HAL and test AMD64

platform:
  arch: amd64

steps:
- name: Build and run tests
  image: eryaf/mk-native_jessie
  commands:
  - uname -a
  - sudo apt-get update
  - sudo apt-get -y upgrade
  - cd ~
  - git clone --depth 1 --branch drone-cloud-ci https://github.com/cerna/machinekit-hal mk
  - cd mk
  - debian/configure
  - mk-build-deps -ir -s sudo -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
  - |
      bash -xec "
      # Set up build:  \`autoconf\` and \`make\`
      (
      cd src;
      ./autogen.sh;
      ./configure
      )
      # Build
      make -C src -j${JOBS};
      # Set up runtime:  setuid, environment, ini
      sudo make -C src setuid || true;  # Don't exit if this fails
      . scripts/rip-environment;
      echo -e 'ANNOUNCE_IPV4=0\nANNOUNCE_IPV6=0' >> \
      etc/machinekit/machinekit.ini;
      tail -2 etc/machinekit/machinekit.ini;
            # Run regression tests
      runtests tests"

---
kind: pipeline
name: Build Debian JESSIE Machinekit-HAL and test ARM

platform:
  arch: arm

steps:
- name: Build and run tests
  image: eryaf/mk-native_jessie
  commands:
  - uname -a
  - sudo apt-get update
  - sudo apt-get -y upgrade
  - cd ~
  - git clone --depth 1 --branch drone-cloud-ci https://github.com/cerna/machinekit-hal mk
  - cd mk
  - debian/configure
  - mk-build-deps -ir -s sudo -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y"
  - |
      bash -xec "
      # Set up build:  \`autoconf\` and \`make\`
      (
      cd src;
      ./autogen.sh;
      ./configure
      )
      # Build
      make -C src -j${JOBS};
      # Set up runtime:  setuid, environment, ini
      sudo make -C src setuid || true;  # Don't exit if this fails
      . scripts/rip-environment;
      echo -e 'ANNOUNCE_IPV4=0\nANNOUNCE_IPV6=0' >> \
      etc/machinekit/machinekit.ini;
      tail -2 etc/machinekit/machinekit.ini;
            # Run regression tests
      runtests tests"